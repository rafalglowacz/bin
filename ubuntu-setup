#!/usr/bin/env bash

step-header() {
  echo -e '\e[93m\e[1m------------------------------'
  echo "$1"
  echo -e '------------------------------\e[0m\n'
}

if [ "$USER" = root ]; then
    # We need $USER to be our regular user, not root, so this script shouldn't be run with sudo.
    echo "Please run this script without sudo and as a regular user. Sudo will be added where necessary."
    exit 1
fi

step-header 'SSH'
if [ ! -f ~/.ssh/id_ed25519.pub ]; then
    # shellcheck disable=SC2034
    ssh-keygen -t ed25519 &&
        cat ~/.ssh/id_ed25519.pub &&
        read -rp "Press Enter after saving the SSH key to Github" confirm ||
        (echo 'SSH error' && exit 1)
fi

if [ ! -f ~/.ssh/config ]; then
    echo 'AddKeysToAgent yes' > ~/.ssh/config
fi

step-header 'Global settings'
timedatectl set-local-rtc 1 ||
    (echo 'Settings error' && exit 1)

step-header 'Packages'
sudo apt install -y \
    ack-grep \
    bat \
    composer \
    curl \
    dconf-editor \
    default-jdk \
    default-jre \
    docker.io \
    fasd \
    fonts-powerline \
    gimp \
    git \
    gnome-tweaks \
    gparted \
    htop \
    iotop \
    jq \
    keepassxc \
    libreoffice \
    lynx \
    meld \
    net-tools \
    nodejs \
    npm \
    php-cli \
    powerline \
    ripgrep \
    tmux \
    tree \
    vim \
    xclip \
    xdotool \
    zsh &&
    sudo snap install skype &&
    sudo snap install slack --classic &&
    sudo snap install spotify &&
    sudo usermod -aG docker "$USER" ||
    (echo 'Installation error' && exit 1)

step-header 'Docker compose'
if ! which docker-compose; then
    sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose ||
    (echo 'Docker Compose error' && exit 1)
fi

step-header 'Bin folder'
if [ ! -d ~/bin ]; then
    cd ~ &&
        git clone git@github.com:rafalglowacz/bin.git ||
        (echo 'Bin error' && exit 1)
fi

step-header 'SSH agent finder'
if [ ! -d ~/bin/ssh-find-agent ]; then
    cd ~/bin &&
    git clone git@github.com:wwalker/ssh-find-agent.git ||
    (echo 'SSH finder error' && exit 1)
fi

step-header 'Key bindings'
~/bin/keybinds-set 2>&1 | grep -v 'No such schema'

step-header 'Dotfiles'
[ ! -d ~/Dev ] && mkdir ~/Dev

if [ ! -d ~/Dev/dotfiles ]; then
    cd ~/Dev &&
        git clone git@github.com:rafalglowacz/dotfiles.git ||
        (echo 'Dotfiles error' && exit 1)
fi

step-header 'ZSH add-ons'
if [ ! -d ~/.oh-my-zsh ]; then
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended ||
    (echo 'OMZ error' && exit 1)
fi

sudo chsh -s "$(which zsh)" "$USER" ||
    (echo 'Default shell change error' && exit 1)

if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ||
    (echo 'ZSH autosuggestions error' && exit 1)
fi

step-header 'Symlinks'
rm ~/.zshrc &&
    rm ~/.tmux.conf &&
    rm ~/.ackrc &&
    rm ~/.gitconfig &&
    ln -s ~/Dev/dotfiles/manjaro-omz.zshrc ~/.zshrc &&
    ln -s ~/Dev/dotfiles/tmux.conf ~/.tmux.conf &&
    ln -s ~/Dev/dotfiles/ackrc.ackrc ~/.ackrc &&
    ln -s ~/Dev/dotfiles/gitconfig ~/.gitconfig ||
    (echo 'Symlinks error' && exit 1)

step-header 'FZF'
if [ ! -d ~/.fzf ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &&
        ~/.fzf/install --key-bindings --completion --update-rc &&
        (echo 'FZF error' && exit 1)
fi

step-header 'Tmux themes'
if [ ! -d ~/Documents/tmux-themepack ]; then
    cd ~/Documents &&
        git clone git@github.com:jimeh/tmux-themepack.git ||
        (echo 'Tmux themepack error' && exit 1)
fi

step-header 'Grub'
if [[ $(grep 'GRUB_TIMEOUT=0' /etc/default/grub) ]]; then
    sudo sed -i 's/GRUB_TIMEOUT=0/GRUB_TIMEOUT=1/' /etc/default/grub &&
    sudo update-grub ||
    (echo 'Grub error' && exit 1)
fi

step-header 'NPM global packages'
if ! which tldr; then
    sudo npm install -g tldr
fi

echo -e '\n\e[32m\e[1m------------------------------'
echo 'Done'
echo -e '------------------------------\e[0m'