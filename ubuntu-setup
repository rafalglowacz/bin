#!/usr/bin/env bash
# shellcheck disable=SC2015

step-header() {
  echo -e '\e[93m\e[1m------------------------------'
  echo "$1"
  echo -e '------------------------------\e[0m\n'
}

fail() {
    echo "$1"
    exit 1
}

if [ "$USER" = root ]; then
    # We need $USER to be our regular user, not root, so this script shouldn't be run with sudo.
    echo "Please run this script without sudo and as a regular user. Sudo will be added where necessary."
    exit 1
fi

step-header 'SSH'
if [ ! -f ~/.ssh/id_ed25519.pub ]; then
    # shellcheck disable=SC2034
    ssh-keygen -t ed25519 &&
        cat ~/.ssh/id_ed25519.pub &&
        read -rp "Press Enter after saving the SSH key to Github" confirm ||
        fail 'SSH error'
fi

if [ ! -f ~/.ssh/config ]; then
    echo 'AddKeysToAgent yes' > ~/.ssh/config
fi

step-header 'Global settings'
timedatectl set-local-rtc 1 ||
    fail 'Settings error'

step-header 'Packages'
sudo apt install -y \
    ack-grep \
    baobab \
    bat \
    composer \
    curl \
    default-jdk \
    default-jre \
    docker.io \
    fasd \
    fonts-powerline \
    gimp \
    git \
    gparted \
    gnome-keyring \
    htop \
    iotop \
    jq \
    keepassxc \
    kitty \
    libreoffice \
    lynx \
    meld \
    net-tools \
    nextcloud-desktop \
    nodejs \
    npm \
    php-cli \
    php-gd \
    powerline \
    remmina \
    thunderbird \
    tmux \
    tree \
    vim \
    xclip \
    xdotool \
    zsh &&
    sudo usermod -aG docker "$USER" ||
    fail 'Installation error'

step-header 'Snap packages'
sudo snap install code --classic &&
    sudo snap install dbeaver-ce &&
    sudo snap install skype &&
    sudo snap install redis-desktop-manager ||
    fail 'Snap installation error'

step-header "Flatpak packages"
sudo flatpak install -y com.getpostman.Postman ||
  fail "Flatpak installation error"

step-header 'Docker compose'
if ! which docker-compose; then
    sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose ||
    fail 'Docker Compose error'
fi

step-header 'PHP'
phpDir=$(ls -1d /etc/php/* | tail -n 1) &&
    sudo sed -i 's/;extension=exif/extension=exif/' "$phpDir/cli/php.ini" &&
    sudo sed -i 's/;extension=gd/extension=gd/' "$phpDir/cli/php.ini" &&
    sudo sed -i 's/;extension=soap/extension=soap/' "$phpDir/cli/php.ini" ||
    fail 'PHP extension enabling error'

step-header 'Bin folder'
if [ ! -d ~/bin ]; then
    cd ~ &&
        git clone git@github.com:rafalglowacz/bin.git ||
        fail 'Bin error'
fi

step-header 'SSH agent finder'
if [ ! -d ~/bin/ssh-find-agent ]; then
    cd ~/bin &&
    git clone git@github.com:wwalker/ssh-find-agent.git ||
    fail 'SSH finder error'
fi

step-header 'Dotfiles'
[ ! -d ~/Dev ] && mkdir ~/Dev

if [ ! -d ~/Dev/dotfiles ]; then
    cd ~/Dev &&
        git clone git@github.com:rafalglowacz/dotfiles.git ||
        fail 'Dotfiles error'
fi

step-header 'ZSH add-ons'
if [ ! -d ~/.oh-my-zsh ]; then
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended ||
    fail 'OMZ error'
fi

sudo chsh -s "$(which zsh)" "$USER" ||
    fail 'Default shell change error'

if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ||
    fail 'ZSH autosuggestions error'
fi

step-header 'Symlinks'
[ ! -d ~/.config/kitty ] && mkdir ~/.config/kitty
rm -f ~/.ackrc &&
    rm -f ~/.gitconfig &&
    rm -f ~/.config/kitty/kitty.conf &&
    rm -f ~/.config/kitty/startup &&
    rm -f ~/.tmux.conf &&
    rm -f ~/.zshrc &&
    ln -s ~/Dev/dotfiles/ackrc.ackrc ~/.ackrc &&
    ln -s ~/Dev/dotfiles/gitconfig ~/.gitconfig &&
    ln -s ~/Dev/dotfiles/kitty.conf ~/.config/kitty/kitty.conf &&
    ln -s ~/Dev/dotfiles/kitty-startup ~/.config/kitty/startup &&
    ln -s ~/Dev/dotfiles/manjaro-omz.zshrc ~/.zshrc &&
    ln -s ~/Dev/dotfiles/tmux.conf ~/.tmux.conf ||
    fail 'Symlinks error'

step-header 'FZF'
if [ ! -d ~/.fzf ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &&
        ~/.fzf/install --key-bindings --completion --update-rc ||
        fail 'FZF error'
fi

step-header 'Tmux themes'
if [ ! -d ~/Documents/tmux-themepack ]; then
    cd ~/Documents &&
        git clone git@github.com:jimeh/tmux-themepack.git ||
        fail 'Tmux themepack error'
fi

step-header 'Grub'
if ! grep -q 'GRUB_TIMEOUT=1' /etc/default/grub; then
    sudo sed -i 's/GRUB_TIMEOUT=./GRUB_TIMEOUT=1/' /etc/default/grub &&
    sudo update-grub ||
    fail 'Grub error'
fi

step-header 'NPM global packages'
if ! which tldr; then
    sudo npm install -g tldr
fi

if ! which git-trim; then
    sudo npm install -g git-trim
fi

echo -e '\n\e[32m\e[1m------------------------------'
echo 'Done'
echo -e '------------------------------\e[0m'
