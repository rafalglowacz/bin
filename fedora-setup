#!/usr/bin/env bash
# shellcheck disable=SC2015

#############
# Functions #
#############

step-header() {
  echo -e '\n\e[93m\e[1m------------------------------'
  echo "$1"
  echo -e '------------------------------\e[0m'
}

fail() {
    echo "$1"
    exit 1
}

########
# Init #
########

osVer=$(rpm -E %fedora)

if [ "$USER" = root ]; then
    # We need $USER to be our regular user, not root, so this script shouldn't be run with sudo.
    echo "Please run this script without sudo and as a regular user. Sudo will be added where necessary."
    exit 1
fi

step-header "SSH" 

if [ ! -f ~/.ssh/id_ed25519.pub ]; then
    # shellcheck disable=SC2034
    ssh-keygen -t ed25519 &&
        cat ~/.ssh/id_ed25519.pub &&
        read -rp "Press Enter after saving the SSH key to Github" confirm ||
        fail 'SSH error'
fi

if [ ! -f ~/.ssh/config ]; then
    echo 'AddKeysToAgent yes' > ~/.ssh/config
fi

########################
# Installation (early) #
########################

step-header "Packages"

sudo dnf install -y \
    git \
    gtk2 \
    keepassxc \
    nextcloud-client ||
    fail "Early packages installation error"

step-header "FreeFileSync"

if ! which freefilesync; then
    echo "Go to https://freefilesync.org/download.php"
    read -rp "Press Enter after installation is finished"
fi

################
# Installation #
################

step-header 'RPM Fusion'

baseUrl='https://download1.rpmfusion.org/free/'
if ! dnf repolist | grep -q 'RPM Fusion'; then
    sudo dnf install \
        $baseUrl/free/fedora/rpmfusion-free-release-$osVer.noarch.rpm \
        $baseUrl/nonfree/fedora/rpmfusion-nonfree-release-$osVer.noarch.rpm ||
        fail 'RPM Fusion error'
else
    echo "Already present"
fi

step-header "DNF packages"

sudo dnf install -y \
    audacity \
    baobab \
    bat \
    calibre \
    composer \
    curl \
    deluge \
    exa \
    fd-find \
    gimp \
    git-delta \
    helm \
    htop \
    iotop \
    jq \
    kitty \
    meld \
    neovim \
    net-tools \
    nodejs \
    npm \
    php-cli \
    php-gd \
    php-soap \
    python3-pip \
    remmina \
    ripgrep \
    seahorse \
    thunderbird \
    tmux \
    util-linux-user \
    vim \
    VirtualBox \
    vlc \
    xclip \
    zsh ||
    fail "DNF installation error"

# step-header "Jetbrains Toolbox"
# if [ ! -d ~/.local/share/JetBrains/Toolbox ]; then
#     echo "Go to https://www.jetbrains.com/toolbox-app/"
#     read -rp "Press Enter after installation is finished"
# fi

# Installed manually because dark theme was glitchy when installed as a snap.
step-header "DBeaver"

if ! which dbeaver; then
    echo "Go to https://dbeaver.io/download/"
    read -rp "Press Enter after installation is finished"
fi

step-header "Docker"

if ! which docker; then
    sudo dnf -y install dnf-plugins-core &&
        sudo dnf config-manager -y --add-repo https://download.docker.com/linux/fedora/docker-ce.repo &&
        sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin ||
        fail 'Docker installation error'
    sudo systemctl enable docker ||
        fail 'Docker service enabling error'
fi

if ! systemctl is-active -q docker; then
    sudo systemctl start docker ||
        fail 'Docker service start error'
fi

sudo usermod -aG docker "$USER" ||
    fail 'Docker usermod error'

step-header 'FZF'

if [ ! -d ~/.fzf ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &&
        ~/.fzf/install --key-bindings --completion --update-rc ||
        fail 'FZF error'
fi

step-header 'Git Trim'

if ! which git-trim; then
    sudo npm install -g git-trim ||
    fail "Git Trim installation error"
fi

step-header 'Plover'

sudo groupadd -f dialout &&
    sudo usermod -aG dialout $USER ||
    fail "Failed to add user to dialout group"

step-header 'QMK'

if ! which qmk; then
    python3 -m pip install --user qmk ||
        fail "QMK installation error"
fi

step-header "SSH agent finder"

if [ ! -d ~/bin/ssh-find-agent ]; then
    cd ~/bin &&
    git clone https://github.com/wwalker/ssh-find-agent.git ||
    fail "SSH finder error"
fi

step-header "Snapd and Snap packages (you'll probably have to restart the script once because of a \"too early for operation\" error)"

sudo dnf install -y \
    snapd &&
    sudo snap install redis-desktop-manager &&
    sudo snap install postman &&
    sudo snap install spotify ||
    fail "Snap installation error"

step-header "Teensy loader (for keyboard firmware)"

if ! which teensy_loader_cli; then
    cd /tmp &&
    rm -rf teensy_loader_cli &&
    git clone https://github.com/PaulStoffregen/teensy_loader_cli.git &&
    cd teensy_loader_cli &&
    make &&
    sudo mv teensy_loader_cli /usr/local/bin ||
    fail "Teensy loader installation error"
fi

step-header 'TLDR'

if ! which tldr; then
    sudo npm install -g tldr &&
    tldr -u ||
    fail "TLDR installation error"
fi

###############################
# Configuration, themes, etc. #
###############################

step-header 'DNF config'

if ! grep -q 'defaultyes' /etc/dnf/dnf.conf; then
    sudo sh -c 'echo defaultyes=True >> /etc/dnf/dnf.conf'
fi

step-header 'Dotfiles'

[ ! -d ~/dev ] && mkdir ~/dev

if [ ! -d ~/dev/dotfiles ]; then
    cd ~/dev &&
        git clone git@github.com:rafalglowacz/dotfiles.git ||
        fail 'Dotfiles error'
fi

step-header 'Grub'

if ! grep -q 'GRUB_TIMEOUT=1' /etc/default/grub; then
    sudo sed -i 's/GRUB_TIMEOUT=./GRUB_TIMEOUT=1/' /etc/default/grub &&
    sudo grub2-mkconfig -o /boot/grub2/grub.cfg ||
    fail 'Grub error'
fi

step-header 'Symlinks'

[ ! -d ~/.config/kitty ] && mkdir ~/.config/kitty

rm -f ~/.gitconfig &&
    ln -sf ~/dev/dotfiles/gitconfig ~/.gitconfig &&
    ln -sf ~/dev/dotfiles/kitty.conf ~/.config/kitty/kitty.conf &&
    ln -sf ~/dev/dotfiles/kitty-startup ~/.config/kitty/startup &&
    ln -sf ~/dev/dotfiles/tmux.conf ~/.tmux.conf &&
    ln -sf ~/dev/dotfiles/manjaro-omz.zshrc ~/.zshrc &&
    ln -sf ~/dev/dotfiles/vcs-exclusions ~/.vcs-exclusions &&
    ln -sf ~/dev/dotfiles/zsh/candy.zsh-theme ~/.oh-my-zsh/custom/themes/candy.zsh-theme ||
    fail 'Symlinks error'

step-header 'Tmux themes'

if [ ! -d ~/Documents/tmux-themepack ]; then
    cd ~/Documents &&
        git clone https://github.com/jimeh/tmux-themepack.git ||
        fail 'Tmux themepack error'
fi

step-header "Basic NVim"

if [ ! -d ~/.config/nvim ]; then
    ln -s ~/dev/dotfiles/vim/basic ~/.config/nvim
fi

step-header "NVim"

if [ ! -d ~/.config/nvim-astro ]; then
    mkdir ~/.config/nvim-astro
    cd ~/.config/nvim-astro
    git clone --depth 1 https://github.com/AstroNvim/AstroNvim nvim
    ln -s ~/dev/dotfiles/vim/astro ~/.config/nvim-astro/nvim/lua/user
fi

step-header 'ZSH'

if [ ! -d ~/.oh-my-zsh ]; then
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended ||
    fail 'OMZ error'
fi

sudo chsh -s "$(which zsh)" "$USER" ||
    fail 'Default shell change error'

if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ||
    fail 'ZSH autosuggestions error'
fi

if [ ! -d ~/.oh-my-zsh/custom/plugins/command-time ]; then
    git clone https://github.com/popstas/zsh-command-time.git ~/.oh-my-zsh/custom/plugins/command-time ||
        fail 'ZSH command time error'
fi

echo -e '\n\e[32m\e[1m------------------------------'
echo 'Done'
echo -e '------------------------------\e[0m'
