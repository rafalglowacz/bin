#!/usr/bin/env bash
# shellcheck disable=SC2015

##############
# Functions #
############

step-header() {
  echo -e '\n\e[93m\e[1m------------------------------'
  echo "$1"
  echo -e '------------------------------\e[0m'
}

fail() {
    echo "$1"
    exit 1
}

##########################
# Configuration (early) #
########################

step-header 'Dotfiles'

[ ! -d ~/dev ] && mkdir ~/dev

if [ ! -d ~/dev/dotfiles ]; then
    cd ~/dev &&
        git clone git@github.com:rafalglowacz/dotfiles.git ||
        fail 'Dotfiles error'
fi

step-header 'Symlinks (early)'

# Directory symlinks need to be deleted.
rm -rf ~/.config/kitty
rm -rf ~/.config/nvim

mkdir -p ~/.config/Code\ -\ OSS/User
mkdir -p ~/.config/ideavim

ln -sf ~/dev/dotfiles/gitconfig ~/.gitconfig &&
    ln -sf ~/dev/dotfiles/idea-vim/idea.vimrc ~/.config/ideavim/ideavimrc &&
    ln -sf ~/dev/dotfiles/kitty ~/.config/kitty &&
    ln -sf ~/dev/dotfiles/nvim/kickstart ~/.config/nvim &&
    ln -sf ~/dev/dotfiles/tmux.conf ~/.tmux.conf &&
    ln -sf ~/dev/dotfiles/vcs-exclusions ~/.vcs-exclusions &&
    ln -sf ~/dev/dotfiles/vscode/vscode-settings.json ~/.config/Code\ -\ OSS/User/settings.json &&
    ln -sf ~/dev/dotfiles/vscode/vscode-shortcuts.json ~/.config/Code\ -\ OSS/User/keybindings.json ||
    fail 'Symlinks error'

#########
# Init #
#######

set -e

if [ "$USER" = root ]; then
    # We need $USER to be our regular user, not root, so this script shouldn't be run with sudo.
    echo "Please run this script without sudo and as a regular user. Sudo will be added where necessary."
    exit 1
fi

step-header 'SSH'

if [ ! -f ~/.ssh/id_ed25519.pub ]; then
    # shellcheck disable=SC2034
    ssh-keygen -t ed25519 &&
        cat ~/.ssh/id_ed25519.pub &&
        read -rp "Press Enter after saving the SSH key to Github" confirm ||
        fail 'SSH error'
fi

if [ ! -f ~/.ssh/config ]; then
    echo 'AddKeysToAgent yes' > ~/.ssh/config
fi

step-header 'Global settings'

sudo timedatectl set-local-rtc 1 ||
    fail 'Settings error'

sudo groupadd vboxusers || true
sudo groupadd docker || true
sudo usermod -aG docker,vboxusers "$USER" ||
    fail 'Usermod error'

# TODO: try `-Y` or `-Y --gendb` sometime to see if it results in a no-op (other than saving the settings).
yay --save --answerdiff All --answerclean None --noconfirm -Y

#########################
# Installation (early) #
#######################

step-header "Kitty"

if [ ! -d ~/.local/kitty.app ]; then
  curl -L -o /tmp/kitty.sh https://sw.kovidgoyal.net/kitty/installer.sh &&
    sh /tmp/kitty.sh ||
    fail "Kitty installation error"
fi

step-header "Pacman packages (early)"

sudo pacman -S --needed --noconfirm \
    keepassxc \
    nextcloud-client ||
    fail "Pacman installation (early) error"

# Commented out because there were some issues with the AUR version so for now
# I'm using the manually downloaded one.
# step-header "FreeFileSync"
#
# if [ ! -f /opt/freefilesync/FreeFileSync ]; then
#     yay -S --needed --noconfirm \
#         freefilesync-bin ||
#         fail 'FreeFileSync installation error'
# fi

#################
# Installation #
###############

step-header 'Pacman packages'

sudo pacman -S --needed --noconfirm \
    audacity \
    baobab \
    base-devel \
    bat \
    btop \
    calibre \
    chromium \
    code \
    composer \
    curl \
    dbeaver \
    discord \
    docker \
    docker-compose \
    eza \
    fd \
    flatpak \
    freecad \
    freerdp \
    fx \
    gimp \
    git-delta \
    gnome-keyring \
    gparted \
    helm \
    helix \
    htop \
    hunspell-en_us \
    hunspell-pl \
    iotop \
    jq \
    jdk-openjdk \
    kdeconnect \
    kdenlive \
    kfind \
    kwalletmanager \
    libreoffice-fresh \
    libvncserver \
    libxcrypt-compat \
    lynx \
    meld \
    ncdu \
    neovim \
    net-tools \
    nodejs \
    noto-fonts-emoji \
    npm \
    partitionmanager \
    php \
    php-gd \
    php-pgsql \
    php-redis \
    php-sodium \
    php-xsl \
    qbittorrent \
    qmk \
    qt5-imageformats \
    redis \
    remmina \
    ripgrep \
    rpi-imager \
    rustup \
    seahorse \
    smplayer \
    strawberry \
    teensy_loader_cli \
    thefuck \
    ttc-iosevka \
    ttf-fantasque-sans-mono \
    ttf-monofur \
    ttf-nerd-fonts-symbols-mono \
    thunderbird \
    tmux \
    tree \
    virtualbox \
    vorbisgain \
    vlc \
    wl-clipboard \
    xclip \
    xdotool \
    yay \
    zig \
    zls \
    zsh ||
    fail 'Pacman installation error'

step-header 'Pacman packages (theming)'

sudo pacman -S --needed --noconfirm \
    cutefish-wallpapers \
    deepin-wallpapers \
    deepin-community-wallpapers \
    elementary-wallpapers \
    endeavouros-theming \
    ukui-wallpapers ||
    fail 'Theming packages error'

step-header 'AUR'

aur=""
# aur="${aur} anki"
# aur="${aur} joplin-appimage"
# aur="${aur} mp3gain"
aur="${aur} php-amqp"
# aur="${aur} plover"

if [[ "$aur" != '' ]]; then
    yay -S --needed --noconfirm $aur || fail 'AUR installation error'
fi

step-header 'Bluetooth'

sudo systemctl enable bluetooth &&
    sudo systemctl start bluetooth ||
    fail 'Bluetooth service error'

step-header 'Docker'

sudo systemctl enable docker ||
    fail 'Docker service enabling error'

step-header "Endeavour extras"

if [ ! -f ~/.local/state/wallpaper-cleanup ]; then
    sudo ~/bin/image-small-delete /usr/share/endeavouros/backgrounds >> ~/.local/state/wallpaper-cleanup
fi

step-header 'Firewall'

sudo firewall-cmd -q --permanent --zone=public --add-service=kdeconnect ||
    fail "Firewall error"

step-header 'FZF'

if [ ! -d ~/.fzf ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &&
        ~/.fzf/install --key-bindings --completion --update-rc ||
        fail 'FZF error'
fi

step-header 'Git Trim'

if ! which git-trim; then
    sudo npm install -g git-trim ||
    fail "Git Trim installation error"
fi

step-header 'Gnome'

if [[ $XDG_CURRENT_DESKTOP == 'GNOME' ]]; then
    if ! grep -q 'QT_QPA_PLATFORM=xcb' /etc/environment; then
        echo 'QT_QPA_PLATFORM=xcb' | sudo tee -a /etc/environment
    fi
    sudo pacman -S --needed --noconfirm gnome-browser-connector ||
        fail 'Gnome error'
fi

step-header 'KDE'

if [[ $XDG_CURRENT_DESKTOP == 'KDE' ]]; then
    sudo pacman -S --needed --noconfirm \
        kdeplasma-addons ||
        fail "KDE packages error"
fi

# if ! which jetbrains-toolbox; then
#     yay -S --needed --noconfirm \
#         jetbrains-toolbox ||
#         fail 'JetBrains Toolbox installation error'
# fi

step-header 'PHP'

sudo sed -i 's/;extension=amqp/extension=amqp/' /etc/php/conf.d/amqp.ini &&
    sudo sed -i 's/;extension=exif/extension=exif/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=gd/extension=gd/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=igbinary/extension=igbinary/' /etc/php/conf.d/igbinary.ini &&
    sudo sed -i 's/;extension=iconv/extension=iconv/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=intl/extension=intl/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=pdo_pgsql/extension=pdo_pgsql/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=redis/extension=redis/' /etc/php/conf.d/redis.ini &&
    sudo sed -i 's/;extension=sodium/extension=sodium/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=soap/extension=soap/' /etc/php/php.ini &&
    sudo sed -i 's/;extension=xsl/extension=xsl/' /etc/php/php.ini ||
    fail 'PHP extension enabling error'

step-header 'QMK'

sudo groupadd -f dialout &&
    sudo usermod -aG dialout $USER ||
    fail "Failed to add user to dialout group"

# step-header "Snapd"
#
# if [ ! -d /var/lib/snapd/snap ]; then
#     rm -rf /tmp/snapd-installation
#         git clone https://aur.archlinux.org/snapd.git /tmp/snapd-installation &&
#         cd /tmp/snapd-installation &&
#         makepkg -si --needed --noconfirm &&
#         sudo systemctl enable --now snapd.socket &&
#         sudo ln -s /var/lib/snapd/snap /snap ||
#         fail "Snapd installation error"
# fi

# step-header "Snap packages (you'll probably have to restart the script once because of a \"too early for operation\" error)."
#     sudo snap install dbeaver-ce &&
#     sudo snap install another-redis-desktop-manager &&
#     sudo snap install spotify ||
#     fail "Snaps installation error"

step-header "Flatpak packages"

sudo flatpak install -y \
  com.getpostman.Postman \
  com.spotify.Client \
  cc.arduino.IDE2 \
  net.cozic.joplin_desktop \
  org.freefilesync.FreeFileSync ||
  fail "Flatpak installation error"

step-header 'SSH agent finder'

if [ ! -d ~/bin/ssh-find-agent ]; then
    cd ~/bin &&
    git clone https://github.com/wwalker/ssh-find-agent.git ||
    fail 'SSH finder error'
fi

step-header 'TLDR'

if ! which tldr; then
    sudo npm install -g tldr &&
    tldr -u ||
    fail "TLDR installation error"
fi

step-header "ZSH"

if [ ! -d ~/.oh-my-zsh ]; then
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended ||
    fail 'OMZ error'
fi

if [[ "$SHELL" != '/usr/bin/zsh' ]]; then
    sudo chsh -s "$(which zsh)" "$USER" ||
        fail 'Default shell change error'
fi

if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions ||
    fail 'ZSH autosuggestions error'
fi

if [ ! -d ~/.oh-my-zsh/custom/plugins/command-time ]; then
    git clone https://github.com/popstas/zsh-command-time.git ~/.oh-my-zsh/custom/plugins/command-time ||
        fail 'ZSH command time error'
fi

if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting \
            ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ||
        fail 'ZSH syntax highlighting error'
fi

###############################
# Configuration, themes etc. #
#############################

step-header 'Boot'

if [ -f /etc/default/grub ] && ! grep -q 'GRUB_TIMEOUT=1' /etc/default/grub; then
    sudo sed -i 's/GRUB_TIMEOUT=./GRUB_TIMEOUT=1/' /etc/default/grub &&
        sudo update-grub ||
        fail 'Grub error'
fi

if sudo sh -c '[ -f /efi/loader/loader.conf ]' && ! sudo grep -q 'timeout 0' /efi/loader/loader.conf; then
    sudo sed -i 's/timeout ./timeout 0/' /efi/loader/loader.conf ||
        fail 'Systemd boot error'
fi

step-header "Symlinks"

ln -sf ~/dev/dotfiles/zsh/candy.zsh-theme ~/.oh-my-zsh/custom/themes/candy.zsh-theme &&
    ln -sf ~/dev/dotfiles/zsh/zshrc.zshrc ~/.zshrc ||
    fail "Symlinks error"

step-header "Update"

sed -i 's/^OnStartupSec/# OnStartupSec/' ~/.config/systemd/user/eos-update-notifier.timer &&
    sed -i 's/^#\s*Persistent=true/Persistent=true/' ~/.config/systemd/user/eos-update-notifier.timer ||
    fail "Update config error"

# step-header "VS Code"
#
# if [ ! -f ~/.local/state/vscode-extensions ]; then
#     cat ~/dev/dotfiles/vscode/vscode-extension-list.txt | xargs -I _ code --install-extension _
#     touch ~/.local/state/vscode-extensions
# fi

echo -e '\n\e[32m\e[1m------------------------------'
echo 'Done'
echo -e '------------------------------\e[0m'
